# 项目名称
name: bryce-cloud
# 服务
services:
  # MySQL 服务
  cloud-mysql:
    container_name: cloud-mysql
    image: public.ecr.aws/docker/library/mysql:8.0.33
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=bryce_cloud_system
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/db:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - cloud
    restart: unless-stopped
  # Redis 服务
  cloud-redis:
    container_name: cloud-redis
    image: public.ecr.aws/docker/library/redis:7.2.7
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/opt/redis.conf
      - redis-data:/data
    command:
      - /opt/redis.conf
    networks:
      - cloud
    restart: unless-stopped
  # nacos 服务
  cloud-nacos:
    container_name: cloud-nacos
    image:  nacos/nacos-server:v2.3.2-slim
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    environment:
      - MODE=standalone
      - NACOS_AUTH_ENABLE=false
    volumes:
      - ./nacos/application.properties:/home/nacos/conf/application.properties
      - nacos-logs:/home/nacos/logs
      - nacos-data:/home/nacos/data
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-mysql
  # grafana 服务
  cloud-grafana:
    container_name: cloud-grafana
    image: grafana/grafana:11.5.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=1234
    volumes:
      - ./grafana/loki.yaml:/etc/grafana/provisioning/datasources/loki.yaml
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-loki
  # loki 服务
  cloud-loki:
    container_name: cloud-loki
    image: grafana/loki:3.3.2
    ports:
      - "3100:3100"
    environment:
      - MODE=standalone
      - NACOS_AUTH_ENABLE=false
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki-data:/var/lib/grafana
    networks:
      - cloud
    restart: unless-stopped
  # zipkin 服务
  cloud-zipkin:
    container_name: cloud-zipkin
    image: openzipkin/zipkin:3.4
    ports:
      - "9411:9411"
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
    networks:
      - cloud
    restart: unless-stopped
  # sentinel-dashboard 服务
  cloud-sentinel-dashboard:
    container_name: cloud-sentinel-dashboard
    image: bladex/sentinel-dashboard:1.8.8
    ports:
      - "8718:8858"
      - "8719:8719"
    networks:
      - cloud
    restart: unless-stopped
  # xxl-job-admin 服务
  cloud-xxl-job-admin:
    container_name: cloud-xxl-job-admin
#    image: xuxueli/xxl-job-admin:2.5.0 # x64 镜像地址
    image: brycehan/xxl-job-admin:2.5.0 # x64 & arm 镜像地址
    ports:
      - "9080:8080"
    environment:
      - PARAMS=--spring.datasource.url=jdbc:mysql://cloud-mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=root --xxl.job.accessToken=txuh4Pg7jKAiWVkfO4KGvVuw
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-mysql
  # rabbitmq 服务
  cloud-rabbitmq:
    container_name: cloud-rabbitmq
    image: rabbitmq:4.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - TZ=Asia/Shanghai
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-plugins:/plugins
    networks:
      - cloud
    restart: unless-stopped
  # minio 服务
  cloud-minio:
    container_name: cloud-minio
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=admin123
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    command: server /data --console-address ":9001"
    networks:
      - cloud
    restart: unless-stopped
  # 网关服务
  cloud-gateway:
    container_name: cloud-gateway
    build:
      context: ./bryce/gateway
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-redis
  # 认证服务
  cloud-auth:
    container_name: cloud-auth
    build:
      context: ./bryce/auth
      dockerfile: Dockerfile
    ports:
      - "9011:9011"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-redis
  # 系统服务
  cloud-module-system:
    container_name: cloud-module-system
    build:
      context: ./bryce/module/system
      dockerfile: Dockerfile
    ports:
      - "9016:9016"
      - "9999:9999"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-mysql
      - cloud-redis
  # 邮件服务
  cloud-module-email:
    container_name: cloud-module-email
    build:
      context: ./bryce/module/email
      dockerfile: Dockerfile
    ports:
      - "9012:9012"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-redis
  # 短信服务
  cloud-module-sms:
    container_name: cloud-module-sms
    build:
      context: ./bryce/module/sms
      dockerfile: Dockerfile
    ports:
      - "9014:9014"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-redis
  # 存储服务
  cloud-module-storage:
    container_name: cloud-module-storage
    build:
      context: ./bryce/module/storage
      dockerfile: Dockerfile
    ports:
      - "9015:9015"
    networks:
      - cloud
    restart: unless-stopped
    depends_on:
      - cloud-redis
  # 监控服务
  cloud-module-monitor:
    container_name: cloud-module-monitor
    build:
      context: ./bryce/module/monitor
      dockerfile: Dockerfile
    ports:
      - "9013:9013"
    networks:
      - cloud
    restart: unless-stopped

# 卷
volumes:
  mysql-data: {}
  redis-data: {}
  nacos-data: {}
  nacos-logs: {}
  grafana-data: {}
  loki-data: {}
  rabbitmq-data: {}
  rabbitmq-plugins: {}
  minio-data: {}
  minio-config: {}

# 网络
networks:
  cloud:
    driver: bridge